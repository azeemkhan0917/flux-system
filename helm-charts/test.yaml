---
# Source: emrchiver-typescript-ms/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ms-emrchiver-typescript-ms-test-connection"
  labels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ms-emrchiver-typescript-ms:80']
  restartPolicy: Never
---
# Source: emrchiver-typescript-ms/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ms-emrchiver-typescript-ms
  labels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm

---
# Source: emrchiver-typescript-ms/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ms-emrchiver-typescript-ms
  labels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  selector:
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms

---
# Source: emrchiver-typescript-ms/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ms-emrchiver-typescript-ms
  labels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  podSelector:
    matchLabels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  policyTypes:
    - Ingress
    - Egress
  ingress:
  egress:


---
# Source: emrchiver-typescript-ms/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ms-emrchiver-typescript-ms
  labels:
    helm.sh/chart: emrchiver-typescript-ms-0.1.0
    app.kubernetes.io/name: emrchiver-typescript-ms
    app.kubernetes.io/instance: ms
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    
    {}
spec:
  replicas: 1
  revisionHistoryLimit: 
  strategy:    RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: emrchiver-typescript-ms
        app.kubernetes.io/instance: ms
    spec:
      serviceAccountName: ms-emrchiver-typescript-ms
      securityContext:
        {}
      containers:
        - name: emrchiver-typescript-ms
          securityContext:
            {}
            capabilities:
              add:
              - NET_ADMIN
              - SYS_TIME 
            runAsUser: 1000
            allowPrivilegeEscalation: false
          image: ":1.16.0"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
            name: ms-configmap
          volumeMounts:
          ports:  
          livenessProbe:
            httpGet:
              path: /
              port: 
          readinessProbe:
            httpGet:
              path: /
              port: 
          resources:
            {}
    volumes:
      

---
# Source: emrchiver-typescript-ms/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ms-configmap
data:
  config.json:
    {
      "fruit":"Apple",
      "size":"Large",
      "color":"Red"
    }
